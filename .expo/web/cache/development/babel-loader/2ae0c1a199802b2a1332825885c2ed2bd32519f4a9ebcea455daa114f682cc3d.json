{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons } from '@expo/vector-icons';\nimport AssignmentsScreen from \"./src/screens/AssignmentsScreen\";\nimport ExperimentsScreen from \"./src/screens/ExperimentsScreen\";\nimport TestScoresScreen from \"./src/screens/TestScoresScreen\";\nimport AssignmentDetailScreen from \"./src/screens/AssignmentDetailScreen\";\nimport ExperimentDetailScreen from \"./src/screens/ExperimentDetailScreen\";\nimport TestScoreDetailScreen from \"./src/screens/TestScoreDetailScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nfunction AssignmentsStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"AssignmentsList\",\n      component: AssignmentsScreen,\n      options: {\n        title: 'Assignments'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AssignmentDetail\",\n      component: AssignmentDetailScreen,\n      options: {\n        title: 'Assignment Details'\n      }\n    })]\n  });\n}\nfunction ExperimentsStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"ExperimentsList\",\n      component: ExperimentsScreen,\n      options: {\n        title: 'Experiments'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ExperimentDetail\",\n      component: ExperimentDetailScreen,\n      options: {\n        title: 'Experiment Details'\n      }\n    })]\n  });\n}\nfunction TestScoresStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"TestScoresList\",\n      component: TestScoresScreen,\n      options: {\n        title: 'Test Scores'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"TestScoreDetail\",\n      component: TestScoreDetailScreen,\n      options: {\n        title: 'Test Score Details'\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Assignments') {\n              iconName = focused ? 'document-text' : 'document-text-outline';\n            } else if (route.name === 'Experiments') {\n              iconName = focused ? 'flask' : 'flask-outline';\n            } else if (route.name === 'TestScores') {\n              iconName = focused ? 'school' : 'school-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: '#6366f1',\n          tabBarInactiveTintColor: 'gray',\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Assignments\",\n        component: AssignmentsStack\n      }), _jsx(Tab.Screen, {\n        name: \"Experiments\",\n        component: ExperimentsStack\n      }), _jsx(Tab.Screen, {\n        name: \"TestScores\",\n        component: TestScoresStack\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","StatusBar","Ionicons","AssignmentsScreen","ExperimentsScreen","TestScoresScreen","AssignmentDetailScreen","ExperimentDetailScreen","TestScoreDetailScreen","jsx","_jsx","jsxs","_jsxs","Tab","Stack","AssignmentsStack","Navigator","children","Screen","name","component","options","title","ExperimentsStack","TestScoresStack","App","style","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown"],"sources":["D:/Siddhesh/Desktop/ass_app/App.js"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n// Import screens\r\nimport AssignmentsScreen from './src/screens/AssignmentsScreen';\r\nimport ExperimentsScreen from './src/screens/ExperimentsScreen';\r\nimport TestScoresScreen from './src/screens/TestScoresScreen';\r\nimport AssignmentDetailScreen from './src/screens/AssignmentDetailScreen';\r\nimport ExperimentDetailScreen from './src/screens/ExperimentDetailScreen';\r\nimport TestScoreDetailScreen from './src/screens/TestScoreDetailScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nfunction AssignmentsStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen \r\n        name=\"AssignmentsList\" \r\n        component={AssignmentsScreen}\r\n        options={{ title: 'Assignments' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"AssignmentDetail\" \r\n        component={AssignmentDetailScreen}\r\n        options={{ title: 'Assignment Details' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction ExperimentsStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen \r\n        name=\"ExperimentsList\" \r\n        component={ExperimentsScreen}\r\n        options={{ title: 'Experiments' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"ExperimentDetail\" \r\n        component={ExperimentDetailScreen}\r\n        options={{ title: 'Experiment Details' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction TestScoresStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen \r\n        name=\"TestScoresList\" \r\n        component={TestScoresScreen}\r\n        options={{ title: 'Test Scores' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"TestScoreDetail\" \r\n        component={TestScoreDetailScreen}\r\n        options={{ title: 'Test Score Details' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <StatusBar style=\"auto\" />\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === 'Assignments') {\r\n              iconName = focused ? 'document-text' : 'document-text-outline';\r\n            } else if (route.name === 'Experiments') {\r\n              iconName = focused ? 'flask' : 'flask-outline';\r\n            } else if (route.name === 'TestScores') {\r\n              iconName = focused ? 'school' : 'school-outline';\r\n            }\r\n\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: '#6366f1',\r\n          tabBarInactiveTintColor: 'gray',\r\n          headerShown: false,\r\n        })}\r\n      >\r\n        <Tab.Screen name=\"Assignments\" component={AssignmentsStack} />\r\n        <Tab.Screen name=\"Experiments\" component={ExperimentsStack} />\r\n        <Tab.Screen name=\"TestScores\" component={TestScoresStack} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}