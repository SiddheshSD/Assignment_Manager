{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NeumorphicInput = function NeumorphicInput(_ref) {\n  var placeholder = _ref.placeholder,\n    value = _ref.value,\n    onChangeText = _ref.onChangeText,\n    style = _ref.style,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    _ref$keyboardType = _ref.keyboardType,\n    keyboardType = _ref$keyboardType === void 0 ? 'default' : _ref$keyboardType;\n  return _jsx(View, {\n    style: [styles.container, style],\n    children: _jsx(LinearGradient, {\n      colors: ['#f0f0f3', '#cacace'],\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: 1,\n        y: 1\n      },\n      style: styles.gradient,\n      children: _jsx(TextInput, {\n        style: [styles.input, multiline && styles.multilineInput],\n        placeholder: placeholder,\n        value: value,\n        onChangeText: onChangeText,\n        multiline: multiline,\n        keyboardType: keyboardType,\n        placeholderTextColor: \"#999\"\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 6,\n    elevation: 4\n  },\n  gradient: {\n    borderRadius: 15,\n    paddingHorizontal: 15,\n    paddingVertical: 12\n  },\n  input: {\n    fontSize: 16,\n    color: '#333',\n    minHeight: 20\n  },\n  multilineInput: {\n    minHeight: 80,\n    textAlignVertical: 'top'\n  }\n});\nexport default NeumorphicInput;","map":{"version":3,"names":["React","View","TextInput","StyleSheet","LinearGradient","jsx","_jsx","NeumorphicInput","_ref","placeholder","value","onChangeText","style","_ref$multiline","multiline","_ref$keyboardType","keyboardType","styles","container","children","colors","start","x","y","end","gradient","input","multilineInput","placeholderTextColor","create","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","paddingHorizontal","paddingVertical","fontSize","color","minHeight","textAlignVertical"],"sources":["D:/Siddhesh/Desktop/ass_app/src/components/NeumorphicInput.js"],"sourcesContent":["import React from 'react';\r\nimport { View, TextInput, StyleSheet } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst NeumorphicInput = ({ placeholder, value, onChangeText, style, multiline = false, keyboardType = 'default' }) => {\r\n  return (\r\n    <View style={[styles.container, style]}>\r\n      <LinearGradient\r\n        colors={['#f0f0f3', '#cacace']}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 1 }}\r\n        style={styles.gradient}\r\n      >\r\n        <TextInput\r\n          style={[styles.input, multiline && styles.multilineInput]}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChangeText={onChangeText}\r\n          multiline={multiline}\r\n          keyboardType={keyboardType}\r\n          placeholderTextColor=\"#999\"\r\n        />\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 3,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 6,\r\n    elevation: 4,\r\n  },\r\n  gradient: {\r\n    borderRadius: 15,\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 12,\r\n  },\r\n  input: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n    minHeight: 20,\r\n  },\r\n  multilineInput: {\r\n    minHeight: 80,\r\n    textAlignVertical: 'top',\r\n  },\r\n});\r\n\r\nexport default NeumorphicInput;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEtD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAiG;EAAA,IAA3FC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,YAAY,GAAAH,IAAA,CAAZG,YAAY;IAAEC,KAAK,GAAAJ,IAAA,CAALI,KAAK;IAAAC,cAAA,GAAAL,IAAA,CAAEM,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,KAAK,GAAAA,cAAA;IAAAE,iBAAA,GAAAP,IAAA,CAAEQ,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,SAAS,GAAAA,iBAAA;EAC7G,OACET,IAAA,CAACL,IAAI;IAACW,KAAK,EAAE,CAACK,MAAM,CAACC,SAAS,EAAEN,KAAK,CAAE;IAAAO,QAAA,EACrCb,IAAA,CAACF,cAAc;MACbgB,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAE;MAC/BC,KAAK,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MACtBC,GAAG,EAAE;QAAEF,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MACpBX,KAAK,EAAEK,MAAM,CAACQ,QAAS;MAAAN,QAAA,EAEvBb,IAAA,CAACJ,SAAS;QACRU,KAAK,EAAE,CAACK,MAAM,CAACS,KAAK,EAAEZ,SAAS,IAAIG,MAAM,CAACU,cAAc,CAAE;QAC1DlB,WAAW,EAAEA,WAAY;QACzBC,KAAK,EAAEA,KAAM;QACbC,YAAY,EAAEA,YAAa;QAC3BG,SAAS,EAAEA,SAAU;QACrBE,YAAY,EAAEA,YAAa;QAC3BY,oBAAoB,EAAC;MAAM,CAC5B;IAAC,CACY;EAAC,CACb,CAAC;AAEX,CAAC;AAED,IAAMX,MAAM,GAAGd,UAAU,CAAC0B,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MACZC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC;IACDC,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDZ,QAAQ,EAAE;IACRK,YAAY,EAAE,EAAE;IAChBQ,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE;EACnB,CAAC;EACDb,KAAK,EAAE;IACLc,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACb,CAAC;EACDf,cAAc,EAAE;IACde,SAAS,EAAE,EAAE;IACbC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAepC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}